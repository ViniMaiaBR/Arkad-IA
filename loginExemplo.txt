<!doctype html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Demo: Cadastro & Login (JS)</title>
  <style>
    :root{font-family:Inter,system-ui,Segoe UI,Roboto,'Helvetica Neue',Arial;margin:0}
    body{display:flex;align-items:center;justify-content:center;min-height:100vh;background:#f3f6fb}
    .card{background:#fff;padding:22px;border-radius:12px;box-shadow:0 8px 24px rgba(20,30,60,0.08);width:360px}
    h1{font-size:18px;margin:0 0 12px}
    label{display:block;font-size:13px;margin-top:8px}
    input[type=text],input[type=email],input[type=password]{width:100%;padding:8px;border-radius:6px;border:1px solid #d7dbe6;margin-top:6px}
    button{margin-top:12px;padding:10px 12px;border-radius:8px;border:0;background:#2563eb;color:#fff;cursor:pointer}
    .muted{font-size:13px;color:#6b7280;margin-top:8px}
    .switch{font-size:13px;color:#2563eb;cursor:pointer}
    .err{color:#b91c1c;font-size:13px;margin-top:8px}
    .ok{color:#059669;font-size:13px;margin-top:8px}
    .actions{display:flex;gap:8px}
    .flex{display:flex;align-items:center;gap:8px;margin-top:8px}
    .profile{margin-top:14px;padding:12px;border-radius:8px;background:#f8fafc}
    small{color:#475569}
  </style>
</head>
<body>
  <div class="card">
    <h1 id="title">Entrar</h1>

    <!-- LOGIN FORM -->
    <form id="login-form">
      <label for="login-email">Email</label>
      <input id="login-email" type="email" placeholder="seu@exemplo.com" required />

      <label for="login-password">Senha</label>
      <input id="login-password" type="password" placeholder="••••••••" required />

      <div class="flex">
        <input id="remember" type="checkbox" />
        <label for="remember">Lembrar-me</label>
      </div>

      <div class="actions">
        <button type="submit">Entrar</button>
        <button id="to-register" type="button" style="background:#e6eefc;color:#0f172a">Criar conta</button>
      </div>

      <div id="login-msg" class="err" aria-live="polite"></div>
    </form>

    <!-- REGISTER FORM -->
    <form id="register-form" style="display:none">
      <label for="name">Nome</label>
      <input id="name" type="text" placeholder="Seu nome" required />

      <label for="email">Email</label>
      <input id="email" type="email" placeholder="seu@exemplo.com" required />

      <label for="password">Senha</label>
      <input id="password" type="password" placeholder="mínimo 6 caracteres" required />

      <label for="confirm">Confirme a senha</label>
      <input id="confirm" type="password" placeholder="repita a senha" required />

      <div class="actions">
        <button type="submit">Cadastrar</button>
        <button id="to-login" type="button" style="background:#e6eefc;color:#0f172a">Voltar</button>
      </div>

      <div id="reg-msg" class="err" aria-live="polite"></div>
    </form>

    <!-- PROFILE (after login) -->
    <div id="profile" style="display:none" class="profile">
      <div><strong id="p-name"></strong></div>
      <div><small id="p-email"></small></div>
      <div style="margin-top:12px">
        <button id="logout">Sair</button>
        <button id="delete" style="background:#ef4444;margin-left:8px">Excluir conta</button>
      </div>
      <div id="profile-msg" class="muted"></div>
    </div>

    <p class="muted" style="margin-top:12px">Os dados de usuário ficam salvos localmente no seu navegador (localStorage) como JSON. Em um ambiente real, substitua por servidor + banco de dados seguro.</p>
  </div>

<script>
// ----- UTIL -----
const STORAGE_KEY = 'login_demo_users';
const CURRENT_KEY = 'login_demo_current';

async function sha256(text){
  const enc = new TextEncoder();
  const data = enc.encode(text);
  const hash = await crypto.subtle.digest('SHA-256', data);
  const bytes = new Uint8Array(hash);
  return Array.from(bytes).map(b => b.toString(16).padStart(2,'0')).join('');
}

function loadUsers(){
  try{
    return JSON.parse(localStorage.getItem(STORAGE_KEY)||'[]');
  }catch(e){return []}
}
function saveUsers(arr){
  localStorage.setItem(STORAGE_KEY, JSON.stringify(arr));
}

function setCurrent(email, remember){
  const payload = {email, at:new Date().toISOString()};
  if(remember) localStorage.setItem(CURRENT_KEY, JSON.stringify(payload));
  else sessionStorage.setItem(CURRENT_KEY, JSON.stringify(payload));
}
function clearCurrent(){
  localStorage.removeItem(CURRENT_KEY);
  sessionStorage.removeItem(CURRENT_KEY);
}
function getCurrent(){
  return JSON.parse(localStorage.getItem(CURRENT_KEY) || sessionStorage.getItem(CURRENT_KEY) || 'null');
}

// ----- UI -----
const loginForm = document.getElementById('login-form');
const registerForm = document.getElementById('register-form');
const toRegister = document.getElementById('to-register');
const toLogin = document.getElementById('to-login');
const title = document.getElementById('title');
const profile = document.getElementById('profile');
const pName = document.getElementById('p-name');
const pEmail = document.getElementById('p-email');
const loginMsg = document.getElementById('login-msg');
const regMsg = document.getElementById('reg-msg');
const profileMsg = document.getElementById('profile-msg');

function showLogin(){ title.innerText='Entrar'; loginForm.style.display='block'; registerForm.style.display='none'; profile.style.display='none'; }
function showRegister(){ title.innerText='Criar conta'; loginForm.style.display='none'; registerForm.style.display='block'; profile.style.display='none'; }
function showProfile(user){ title.innerText='Perfil'; loginForm.style.display='none'; registerForm.style.display='none'; profile.style.display='block'; pName.innerText=user.name; pEmail.innerText=user.email; }

// ----- EVENTS -----
toRegister.onclick = ()=>{ showRegister(); regMsg.innerText=''; }
toLogin.onclick = ()=>{ showLogin(); loginMsg.innerText=''; }

registerForm.addEventListener('submit', async (e)=>{
  e.preventDefault(); regMsg.innerText='';
  const name = document.getElementById('name').value.trim();
  const email = document.getElementById('email').value.trim().toLowerCase();
  const password = document.getElementById('password').value;
  const confirm = document.getElementById('confirm').value;
  if(password.length < 6){ regMsg.innerText='Senha precisa ter ao menos 6 caracteres.'; return }
  if(password !== confirm){ regMsg.innerText='Senhas não coincidem.'; return }
  const users = loadUsers();
  if(users.find(u=>u.email===email)){ regMsg.innerText='Já existe uma conta com esse email.'; return }
  const hashed = await sha256(password);
  users.push({name,email,password:hashed,created:new Date().toISOString()});
  saveUsers(users);
  regMsg.className='ok'; regMsg.innerText='Conta criada com sucesso! Agora faça login.';
  setTimeout(()=>{ document.getElementById('name').value=''; document.getElementById('email').value=''; document.getElementById('password').value=''; document.getElementById('confirm').value=''; regMsg.innerText=''; showLogin(); },800);
});

loginForm.addEventListener('submit', async (e)=>{
  e.preventDefault(); loginMsg.innerText='';
  const email = document.getElementById('login-email').value.trim().toLowerCase();
  const password = document.getElementById('login-password').value;
  const remember = document.getElementById('remember').checked;
  const users = loadUsers();
  const user = users.find(u=>u.email===email);
  if(!user){ loginMsg.innerText='Usuário não encontrado.'; return }
  const hashed = await sha256(password);
  if(hashed !== user.password){ loginMsg.innerText='Senha inválida.'; return }
  setCurrent(email, remember);
  loginMsg.className='ok'; loginMsg.innerText='Login realizado!';
  showProfile(user);
});

// logout
document.getElementById('logout').addEventListener('click',(e)=>{ clearCurrent(); showLogin(); profileMsg.innerText='Você saiu.'; });

// delete account
document.getElementById('delete').addEventListener('click',()=>{
  if(!confirm('Tem certeza que deseja excluir a conta? Isso removerá os dados locais.')) return;
  const cur = getCurrent(); if(!cur){ alert('Nenhum usuário logado'); return }
  const users = loadUsers().filter(u=>u.email!==cur.email);
  saveUsers(users);
  clearCurrent(); showLogin(); alert('Conta excluída.');
});

// on load: check current
(function init(){
  const cur = getCurrent();
  if(cur){
    const users = loadUsers();
    const user = users.find(u=>u.email===cur.email);
    if(user){ showProfile(user); profileMsg.innerText=`Login restaurado: ${new Date(cur.at).toLocaleString()}`; return }
    // if user not found, clear
    clearCurrent();
  }
  showLogin();
})();

</script>
</body>
</html>
